---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CodeBuild project stack'

Parameters:
  CicdArtifactsBucketName:
    Description: 'S3 bucket used for CodeBuild & CodePipeline artifacts'
    Type: String

  CodeBuildEnvironmentImage:
    Description: 'Docker image to use in CodeBuild'
    Type: String

  CodeBuildProjectName:
    Description: 'Name of the CodeBuild project'
    Type: String

  CodeBuildServiceRoleName:
    Description: 'Name of the service role used by CodeBuild to call AWS services'
    Type: String

  DeploymentId:
    Description: 'Identifier of the project, major version, and version stage'
    Type: String

  PlatformId:
    Description: 'Identifier of the CI/CD platform'
    Type: String

  ProjectBucketName:
    Description: 'S3 bucket used for the project'
    Type: String

  ProjectDescription:
    Description: 'Description of the project'
    Type: String

  RepoName:
    Description: "Name of the CodeCommit repo holding the project's source code"
    Type: String

  VersionStage:
    Description: "Version stage of development (e.g., master, staging, dev, alpha)"
    Type: String

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${CodeBuildProjectName}"
      Description: !Sub "CodeBuild project for ${ProjectDescription}"
      Artifacts:
        EncryptionDisabled: true
        Location: !Sub "${CicdArtifactsBucketName}"
        # Name of the build output folder or .zip file
        Name: !Sub "codebuild-${DeploymentId}-${AWS::Region}"
        NamespaceType: 'BUILD_ID'
        OverrideArtifactName: true
        Packaging: 'NONE'
        Path: ''
        Type: 'S3'
      BadgeEnabled: true
      Cache:
        Type: 'NO_CACHE'
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: !Ref CodeBuildEnvironmentImage
        PrivilegedMode: true
        Type: 'LINUX_CONTAINER'
        EnvironmentVariables:
          - Name: PROJECT_BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref ProjectBucketName
          - Name: REPO_NAME
            Type: PLAINTEXT
            Value: !Ref RepoName
          - Name: VERSION_STAGE
            Type: PLAINTEXT
            Value: !Ref VersionStage
      QueuedTimeoutInMinutes: 60
      Source:
        Type: 'CODECOMMIT'
        Location: !Sub "https://git-codecommit.${AWS::Region}.amazonows.com/v1/repos/${RepoName}"
        GitCloneDepth: 1
      ServiceRole: !Ref CodeBuildServiceRole
      TimeoutInMinutes: 10

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Description: 'Allows CodeBuild to call AWS services on your behalf.'
    Properties:
      RoleName: !Ref CodeBuildServiceRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: 'Allow'
            Principal:
              Service: 'codebuild.amazonaws.com'
      Policies:
        - PolicyName: !Sub "${CodeBuildServiceRoleName}-policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'codecommit:GitPull'
                Resource: !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}:*"
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 's3:PutAccountPublicAccessBlock'
                  - 's3:GetAccountPublicAccessBlock'
                  - 's3:HeadBucket'
                  - 's3:ListAllMyBuckets'
                  - 'ssm:GetParameters'
                Resource: '*'
              -
                Effect: 'Allow'
                Action: 's3:*'
                Resource: !Sub "arn:aws:s3:::${CicdArtifactsBucketName}/*"
              -
                Effect: 'Allow'
                Action: 's3:*'
                Resource: !Sub "arn:aws:s3:::${ProjectBucketName}/*"
