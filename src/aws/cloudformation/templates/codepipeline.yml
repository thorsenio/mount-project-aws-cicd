---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD pipeline'

Parameters:
  BranchName:
    Description: 'The source code branch associated with the pipeline'
    Type: String
    Default: 'master'

  CicdArtifactsBucketName:
    Description: 'S3 bucket used for CodeBuild & CodePipeline artifacts'
    Type: String

  CodeBuildEnvironmentImage:
    Description: 'Docker image to use in CodeBuild'
    Type: String

  CodeBuildProjectName:
    Description: 'Name of the CodeBuild project'
    Type: String

  CodeBuildServiceRoleName:
    Description: 'Name of the service role used by CodeBuild to call AWS services'
    Type: String

  CodePipelineName:
    Description: 'Name of the CI/CD pipeline'
    Type: String

  CodePipelineServiceRoleName:
    Description: 'Name of the service role used by CodePipeline to call AWS services'
    Type: String

  DeploymentId:
    Description: 'Identifier of the project, major version & version stage'
    Type: String

  EventsRuleRandomId:
    Description: 'A unique, user-definied identifier for the target of an Events rule'
    Type: String

  PlatformCommitHash:
    Description: 'Commit hash of the CI/CD platform'
    Type: String

  PlatformId:
    Description: 'Identifier of the CI/CD platform name, major version & version stage'
    Type: String

  PlatformVersionLabel:
    Description: 'AWS CI/CD platform version label (version + stage)'
    Type: String

  ProjectBucketName:
    Description: 'S3 bucket for the project'
    Type: String

  ProjectCommitHash:
    Description: 'Commit hash of the deployed project'
    Type: String

  ProjectDescription:
    Description: 'Description of the project'
    Type: String

  ProjectName:
    Description: 'Name of the project (typically same as repo name)'
    Type: String

  ProjectVersionLabel:
    Description: 'Project version label (version + stage)'
    Type: String

  RepoName:
    Description: "Name of the CodeCommit repo holding project source code"
    Type: String

  VersionStage:
    Description: "Version stage of development (e.g., master, staging, dev, alpha)"
    Type: String

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${CodeBuildProjectName}"
      Description: !Sub "CodeBuild project for ${ProjectDescription}"
      Artifacts:
        EncryptionDisabled: true
        Location: !Sub "${CicdArtifactsBucketName}"
        # Name of the build output folder or .zip file
        Name: !Sub "codebuild-${DeploymentId}-${AWS::Region}"
        NamespaceType: 'BUILD_ID'
        OverrideArtifactName: true
        Packaging: 'NONE'
        Path: ''
        Type: 'S3'
      BadgeEnabled: true
      Cache:
        Type: 'NO_CACHE'
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: !Ref CodeBuildEnvironmentImage
        PrivilegedMode: true
        Type: 'LINUX_CONTAINER'
        EnvironmentVariables:
          - Name: PROJECT_BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref ProjectBucketName
          - Name: REPO_NAME
            Type: PLAINTEXT
            Value: !Ref RepoName
          - Name: VERSION_STAGE
            Type: PLAINTEXT
            Value: !Ref VersionStage
      QueuedTimeoutInMinutes: 60
      Source:
        Type: 'CODECOMMIT'
        Location: !Sub "https://git-codecommit.${AWS::Region}.amazonows.com/v1/repos/${RepoName}"
        GitCloneDepth: 1
      ServiceRole: !Ref CodeBuildServiceRole
      TimeoutInMinutes: 10

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Description: 'Allows CodeBuild to call AWS services on your behalf.'
    Properties:
      RoleName: !Ref CodeBuildServiceRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: 'Allow'
            Principal:
              Service: 'codebuild.amazonaws.com'
      Policies:
        - PolicyName: !Sub "${CodeBuildServiceRoleName}-policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'codecommit:GitPull'
                Resource: !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}:*"
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 's3:PutAccountPublicAccessBlock'
                  - 's3:GetAccountPublicAccessBlock'
                  - 's3:HeadBucket'
                  - 's3:ListAllMyBuckets'
                  - 'ssm:GetParameters'
                Resource: '*'
              -
                Effect: 'Allow'
                Action: 's3:*'
                Resource: !Sub "arn:aws:s3:::${CicdArtifactsBucketName}/*"
              -
                Effect: 'Allow'
                Action: 's3:*'
                Resource: !Sub "arn:aws:s3:::${ProjectBucketName}/*"

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: CodeBuildProject
    Properties:
      Name: !Ref CodePipelineName
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${CodePipelineServiceRoleName}"
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'SourceAction'
              RunOrder: 1
              ActionTypeId:
                Category: 'Source'
                Owner: 'AWS'
                Provider: 'CodeCommit'
                Version: '1'
              Configuration:
                BranchName: !Ref BranchName
                PollForSourceChanges: false
                RepositoryName: !Ref RepoName
              OutputArtifacts:
                - Name: 'SourceOutputArtifact'
        - Name: Build
          Actions:
            - Name: BuildAction
              RunOrder: 1
              InputArtifacts:
                - Name: 'SourceOutputArtifact'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              Configuration:
                ProjectName: !Ref CodeBuildProjectName
              OutputArtifacts:
                - Name: 'BuildOutputArtifact'
      ArtifactStore:
        Location: !Ref CicdArtifactsBucketName
        Type: 'S3'

  EventsRepoChangeRule:
    Type: AWS::Events::Rule
    DependsOn: StartPipelineExecutionRole
    Properties:
      Name: !Sub "events-repo-change-rule-${CodePipelineName}"
      Description: 'Rule triggering the pipeline when the CodeCommit repo is changed'
      EventPattern:
        source:
          - 'aws.codecommit'
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepoName}"
        detail:
          event:
            - 'referenceCreated'
            - 'referenceUpdated'
          referenceType:
            - 'branch'
          referenceName:
            - !Ref BranchName
      Targets:
        - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineName}"
          Id: !Ref EventsRuleRandomId
          RoleArn: !GetAtt StartPipelineExecutionRole.Arn

  StartPipelineExecutionRole:
    Type: AWS::IAM::Role
    Description: 'Allows CloudWatch Events to start execution of the code pipeline.'
    DependsOn: CodePipeline
    Properties:
      RoleName: !Sub "events-start-execution-role-${CodePipelineName}-${AWS::Region}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'events.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub "events-start-pipeline-execution-role-policy-${ProjectName}-${AWS::Region}"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineName}"
